"""v2: add crypto domain schema (dimensions, facts, links)

Revision ID: 4a4bafa7b8b7
Revises: 7c81f1d77f74
Create Date: 2025-05-19 23:48:41.969244

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4a4bafa7b8b7'
down_revision: Union[str, None] = '7c81f1d77f74'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dim_crypto_category',
    sa.Column('category_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('dim_crypto_id',
    sa.Column('crypto_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('symbol', sa.String(length=20), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('platform_name', sa.String(length=255), nullable=True),
    sa.Column('platform_symbol', sa.String(length=20), nullable=True),
    sa.Column('platform_token_address', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('crypto_id')
    )
    op.create_table('crypto_category_link',
    sa.Column('crypto_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['dim_crypto_category.category_id'], ),
    sa.ForeignKeyConstraint(['crypto_id'], ['dim_crypto_id.crypto_id'], ),
    sa.PrimaryKeyConstraint('crypto_id', 'category_id')
    )
    op.create_table('dim_crypto_info',
    sa.Column('crypto_id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=50), nullable=True),
    sa.Column('snapshot_timestamp', sa.DateTime(), nullable=True),
    sa.Column('snapshot_date', sa.Date(), nullable=True),
    sa.Column('date_launched', sa.Date(), nullable=True),
    sa.Column('date_added', sa.Date(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('website_url', sa.String(length=500), nullable=True),
    sa.Column('technical_doc_url', sa.String(length=500), nullable=True),
    sa.Column('explorer_url', sa.String(length=500), nullable=True),
    sa.Column('source_code_url', sa.String(length=500), nullable=True),
    sa.Column('twitter_url', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['dim_crypto_id.crypto_id'], ),
    sa.PrimaryKeyConstraint('crypto_id')
    )
    op.create_table('dim_crypto_map',
    sa.Column('crypto_id', sa.Integer(), nullable=False),
    sa.Column('snapshot_timestamp', sa.DateTime(), nullable=False),
    sa.Column('snapshot_str', sa.String(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Integer(), nullable=True),
    sa.Column('last_historical_data', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['dim_crypto_id.crypto_id'], ),
    sa.PrimaryKeyConstraint('crypto_id', 'snapshot_timestamp')
    )
    op.create_table('fact_crypto_category',
    sa.Column('category_id', sa.String(length=100), nullable=False),
    sa.Column('snapshot_timestamp', sa.DateTime(), nullable=False),
    sa.Column('snapshot_str', sa.String(), nullable=False),
    sa.Column('num_tokens', sa.Integer(), nullable=True),
    sa.Column('avg_price_change', sa.Float(), nullable=True),
    sa.Column('market_cap', sa.Float(), nullable=True),
    sa.Column('market_cap_change', sa.Float(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('volume_change', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.String(), nullable=True),
    sa.Column('volume_to_market_cap_ratio', sa.Float(), nullable=True),
    sa.Column('dominance_per_token', sa.Float(), nullable=True),
    sa.Column('market_cap_change_rate', sa.Float(), nullable=True),
    sa.Column('volume_change_rate', sa.Float(), nullable=True),
    sa.Column('price_change_index', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['dim_crypto_category.category_id'], ),
    sa.PrimaryKeyConstraint('category_id', 'snapshot_timestamp')
    )
    op.create_table('fact_crypto_market',
    sa.Column('crypto_id', sa.Integer(), nullable=False),
    sa.Column('snapshot_timestamp', sa.DateTime(), nullable=False),
    sa.Column('snapshot_str', sa.String(), nullable=False),
    sa.Column('batch_index', sa.Integer(), nullable=True),
    sa.Column('cmc_rank', sa.Integer(), nullable=True),
    sa.Column('last_updated_usd', sa.String(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('num_market_pairs', sa.Integer(), nullable=True),
    sa.Column('price_usd', sa.Float(), nullable=True),
    sa.Column('volume_24h_usd', sa.Float(), nullable=True),
    sa.Column('volume_change_24h', sa.Float(), nullable=True),
    sa.Column('percent_change_1h_usd', sa.Float(), nullable=True),
    sa.Column('percent_change_24h_usd', sa.Float(), nullable=True),
    sa.Column('percent_change_7d_usd', sa.Float(), nullable=True),
    sa.Column('market_cap_usd', sa.Float(), nullable=True),
    sa.Column('market_cap_dominance_usd', sa.Float(), nullable=True),
    sa.Column('fully_diluted_market_cap_usd', sa.Float(), nullable=True),
    sa.Column('self_reported_market_cap', sa.Float(), nullable=True),
    sa.Column('circulating_supply', sa.Float(), nullable=True),
    sa.Column('total_supply', sa.Float(), nullable=True),
    sa.Column('max_supply', sa.Float(), nullable=True),
    sa.Column('infinite_supply', sa.Boolean(), nullable=True),
    sa.Column('self_reported_circulating_supply', sa.Float(), nullable=True),
    sa.Column('volume_to_market_cap_ratio', sa.Float(), nullable=True),
    sa.Column('missing_supply_ratio', sa.Float(), nullable=True),
    sa.Column('supply_utilization', sa.Float(), nullable=True),
    sa.Column('fully_diluted_cap_ratio', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['dim_crypto_id.crypto_id'], ),
    sa.PrimaryKeyConstraint('crypto_id', 'snapshot_timestamp')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fact_crypto_market')
    op.drop_table('fact_crypto_category')
    op.drop_table('dim_crypto_map')
    op.drop_table('dim_crypto_info')
    op.drop_table('crypto_category_link')
    op.drop_table('dim_crypto_id')
    op.drop_table('dim_crypto_category')
    # ### end Alembic commands ###
